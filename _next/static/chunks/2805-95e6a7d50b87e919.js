"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2805],{38431:function(n,e,t){t.d(e,{Z:function(){return c}});var r=t(57437),a=t(91310),o=t(96164);function c(n){let{buttonClassName:e,buttonText:t="Log In"}=n;return(0,r.jsx)(a.eb,{buttonClassName:(0,o.m6)("!py-[0.5rem] !px-[1rem] whitespace-nowrap ",e),innerButtonComponent:(0,r.jsx)(r.Fragment,{children:t})})}},44106:function(n,e,t){t.d(e,{Js:function(){return P},Pj:function(){return $},mT:function(){return w},uY:function(){return F}});var r=t(48646),a=t(21432),o=t(97545),c=t(72630);function i(){let n=(0,r._)(["\n    query FabricaAggregatedData($network: String!, $contractAddress: String!, $walletAddress: String!) {\n  wallet(\n    network: $network\n    contractAddress: $contractAddress\n    walletAddress: $walletAddress\n  ) {\n    tokenCount\n    totalAcres\n    totalValue\n  }\n}\n    "]);return i=function(){return n},n}function s(){let n=(0,r._)(["\n    query FabricaScoringDescriptors {\n  scoringDescriptors {\n    groupName\n    title\n    description\n    maxScore\n  }\n}\n    "]);return s=function(){return n},n}function d(){let n=(0,r._)(["\n    query fabricaToken($network: String!, $contractAddress: String!, $tokenId: String!) {\n  token(network: $network, contractAddress: $contractAddress, tokenId: $tokenId) {\n    tokenId\n    isBurned\n    isPremint\n    network\n    contractAddress\n    configurationUrl\n    metadataUri\n    operatingAgreement\n    supply\n    validator\n    score\n    loans {\n      loanProvider\n      loanId\n      loanStatus\n      borrower\n      lender\n      currency\n      currencySymbol\n      principal\n      principalScaled\n      maxRepayment\n      maxRepaymentScaled\n      collateralContract\n      collateralId\n      collateralWrapper\n      startTime\n      durationSeconds\n      durationFormatted\n      maturityDate\n      interestForDurationPercent\n      marketplaceFeeBps\n      marketplaceFeePercent\n      revenueSharePartner\n      revenueShareBps\n      revenueSharePercent\n      referralFeeBps\n      referralFeePercent\n      totalRenegotiationFeesPaid\n      totalRenegotiationFeesPaidScaled\n      totalRenegotiationAdminFeesPaid\n      totalRenegotiationAdminFeesPaidScaled\n      amountPaidToLender\n      amountPaidToLenderScaled\n      marketplaceFeePaid\n      marketplaceFeePaidScaled\n      revenueSharePaid\n      revenueSharePaidScaled\n      loanLiquidationDate\n    }\n    pricing {\n      scope\n      source\n      value\n      currency\n      confidence\n      timestamp\n    }\n    valuation {\n      countyAssessment\n      estimate\n      value\n    }\n    marketplaceListings {\n      marketplace\n      permalink\n      price\n      symbol\n    }\n    scoringCheckResults {\n      checkName\n      title\n      group\n      value\n    }\n    transfers {\n      transactionHash\n      blockTimestamp\n      from {\n        address\n      }\n      to {\n        address\n      }\n    }\n    balances {\n      balance\n      owner {\n        address\n      }\n      holder {\n        address\n      }\n    }\n    metadata {\n      name\n      imageUrl\n      mapboxImageBaseUrl\n      animationUrl\n      externalUrl\n      country\n      acres\n      city\n      county\n      state\n      parcel\n      description\n    }\n    configuration {\n      proofOfTitle {\n        document\n        documentId\n        documentName\n        source\n      }\n      propertyNickName\n      userDescription\n      media {\n        type\n        source\n        description\n      }\n      documents {\n        type\n        source\n        description\n      }\n    }\n    definitionUrl\n    definition {\n      claim\n      holdingEntity\n      coordinates {\n        lat\n        lon\n      }\n      offchainRegistrar {\n        country\n        admin\n        adminId\n        propertyId\n      }\n    }\n  }\n}\n    "]);return d=function(){return n},n}function l(){let n=(0,r._)(["\n    query FabricaTokenForMap($network: String!, $contractAddress: String!, $tokenId: String!) {\n  token(network: $network, contractAddress: $contractAddress, tokenId: $tokenId) {\n    tokenId\n    definition {\n      coordinates {\n        lat\n        lon\n      }\n    }\n  }\n}\n    "]);return l=function(){return n},n}function u(){let n=(0,r._)(["\n    query FabricaTokenForPropertyCard($network: String!, $contractAddress: String!, $tokenId: String!) {\n  token(network: $network, contractAddress: $contractAddress, tokenId: $tokenId) {\n    balances {\n      owner {\n        address\n      }\n    }\n    metadata {\n      description\n      name\n      imageUrl\n      mapboxImageBaseUrl\n      animationUrl\n      externalUrl\n      country\n      acres\n      city\n      county\n      state\n      parcel\n    }\n    configuration {\n      userDescription\n    }\n    pricing {\n      scope\n      source\n      value\n      currency\n      confidence\n      timestamp\n    }\n  }\n}\n    "]);return u=function(){return n},n}function m(){let n=(0,r._)(["\n    query FabricaTokenImageAndName($network: String!, $contractAddress: String!, $tokenId: String!) {\n  token(network: $network, contractAddress: $contractAddress, tokenId: $tokenId) {\n    metadata {\n      name\n      imageUrl\n      mapboxImageBaseUrl\n    }\n  }\n}\n    "]);return m=function(){return n},n}function p(){let n=(0,r._)(["\n    query FabricaTokens($network: String!, $contractAddress: String!, $ownedBy: String) {\n  tokens(network: $network, contractAddress: $contractAddress, ownedBy: $ownedBy) {\n    balances {\n      holder {\n        address\n      }\n      owner {\n        address\n      }\n    }\n    tokenId\n    isPremint\n    pricing {\n      scope\n      source\n      value\n      currency\n      confidence\n      timestamp\n    }\n    metadata {\n      name\n      imageUrl\n      mapboxImageBaseUrl\n      animationUrl\n      externalUrl\n      country\n      acres\n      city\n      county\n      state\n      parcel\n    }\n    configuration {\n      propertyNickName\n    }\n    definition {\n      coordinates {\n        lat\n        lon\n      }\n    }\n  }\n}\n    "]);return p=function(){return n},n}function k(){let n=(0,r._)(["\n    query FabricaTokensImageAndName($network: String!, $contractAddress: String!, $ownedBy: String) {\n  tokens(network: $network, contractAddress: $contractAddress, ownedBy: $ownedBy) {\n    tokenId\n    isPremint\n    metadata {\n      name\n      imageUrl\n      mapboxImageBaseUrl\n    }\n  }\n}\n    "]);return k=function(){return n},n}function f(){let n=(0,r._)(["\n    query loanOffersForToken($network: String!, $contractAddress: String!, $tokenId: String!) {\n  token(network: $network, contractAddress: $contractAddress, tokenId: $tokenId) {\n    loanOffers {\n      aprBps\n      aprPercent\n      borrower\n      collateralContract\n      collateralId\n      currency\n      currencySymbol\n      durationFormatted\n      durationSeconds\n      interestForDurationBps\n      interestForDurationPercent\n      interestProrated\n      lender\n      loanContract\n      loanProvider\n      loanType\n      marketplaceFeeBps\n      marketplaceFeePercent\n      maxRepayment\n      maxRepaymentScaled\n      offerId\n      offeredDate\n      offerExpiry\n      principal\n      principalScaled\n      referrer\n    }\n  }\n}\n    "]);return f=function(){return n},n}let g={};(0,a.Ps)(i());let y=(0,a.Ps)(s());function $(n){let e={...g,...n};return o.t(y,e)}(0,a.Ps)(d()),(0,a.Ps)(l()),(0,a.Ps)(u());let S=(0,a.Ps)(m());function w(n){let e={...g,...n};return c.a(S,e)}(0,a.Ps)(p());let A=(0,a.Ps)(k());function P(n){let e={...g,...n};return o.t(A,e)}let I=(0,a.Ps)(f());function F(n){let e={...g,...n};return c.a(I,e)}}}]);